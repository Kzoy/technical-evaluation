-- USUARIOS
create table Usuario
	(pk_Id_Usuario serial PRIMARY KEY,
	str_Login varchar(30) not null,
	str_Senha varchar(30) not null,
	bln_Status boolean
	);
-- UNIDADES
create table Unidade	
	(pk_Id_Unidade serial PRIMARY KEY,
	str_Nome varchar(50) not null,
	bln_Status boolean
	);
-- COLABORADORES
create table Colaborador
	(pk_Id_Colaborador serial PRIMARY KEY,
	str_Nome varchar(100) not null,
	fk_Unidade int,
	fk_Usuario int not null,
	FOREIGN KEY (fk_Unidade) REFERENCES Unidade(pk_Id_Unidade),
	FOREIGN KEY (fk_Usuario) REFERENCES Usuario(pk_Id_Usuario)
	);

/*------------------------------------------
              CRUD USUARIOS
------------------------------------------*/
-------------------------------------------
-- Cadastro de Usuário
-------------------------------------------
Create procedure usp_InserirUsuario
	(Login varchar(30),
	Senha varchar(30),
	Status boolean
	)
language sql
as $$
	insert into 
		Usuario
			(str_Login,
			str_Senha,
			bln_Status
			)
		values
			(Login,
			Senha,
			Status	
			);
$$;
	
	
-------------------------------------------
-- Listagem de Usuários
-------------------------------------------
CREATE FUNCTION ufn_LstUsuarioStatus 
	(p_status BOOLEAN default NULL)

RETURNS TABLE(nome VARCHAR) 
AS $$

BEGIN
    RETURN QUERY

    SELECT 
    	str_Login,
	bln_Status
    FROM 
    	Usuario
    WHERE 
	(p_status is null or bln_Status = p_status);
END;
$$ LANGUAGE plpgsql;

-------------------------------------------
-- Atualização de Usuário
-------------------------------------------
Create procedure usp_AtualizarUsuario
	(IdUsuario int,
	Senha varchar(30),
	Status boolean
	)
language sql
as $$
	update Usuario
	set 
		str_Senha = senha,
		bln_Status = Status
	where 
		pk_Id_Usuario = IdUsuario;
$$;
	

/*------------------------------------------
               CRUD UNIDADES
------------------------------------------*/
-------------------------------------------
-- Cadastro de Unidades
-------------------------------------------
Create procedure usp_InserirUnidade
	(Nome varchar(50),
	Status boolean
	)
language sql
as $$
	insert into 
		Unidade
			(str_Nome,
			bln_Status
			)
		values
			(Nome,
			Status	
			);
$$;

-------------------------------------------
-- Listagem de Unidades
-------------------------------------------
create view Vw_LstUnidades
as

select 
	Uni.str_Nome,
	Uni.bln_Status,
	col.str_Nome as NomeColaborador
from 
	Unidade as uni
	left join Colaborador as col
		on col.fk_Unidade = uni.pk_Id_Unidade
;



-------------------------------------------
-- Atualização de Unidades
-------------------------------------------
Create procedure usp_AtualizarUnidade
	(IdUnidade int,
	Status boolean
	)
language sql
as $$
	update Unidade
	set 
		bln_Status = Status
	where 
		pk_Id_Unidade = IdUnidade;
$$;


/*------------------------------------------
             CRUD COLABORADORES
------------------------------------------*/
-------------------------------------------
-- Cadastro de Colaboradores
-------------------------------------------
Create procedure usp_InserirColaborador
	(Nome varchar(100),
	fkUsuario int,
	fkUnidade int default null
	)
language sql
as $$
	insert into 
		Colaborador
			(str_Nome,
			fk_Unidade,
			fk_Usuario
			)
		values
			(Nome,
			fkUnidade,
			fkUsuario
			);
$$;

-------------------------------------------
-- Listagem de Colaboradores
-------------------------------------------
create view Vw_LstColaboradores
as

select 
	str_Nome,
	fk_Unidade,
	fk_Usuario
from 
	Colaborador 
;

-------------------------------------------
-- Atualização de Colaboradores
-------------------------------------------
Create procedure usp_AtualizarColaborador
	(IdColaborador int,
	Nome varchar(100),
	fkUnidade int
	)
language sql
as $$
	update Colaborador
	set 
		str_Nome = Nome,
		fk_Unidade = fkUnidade
		
		
	where 
		pk_Id_Colaborador = IdColaborador;
$$;



-------------------------------------------
-- Remoção de Colaboradores
-------------------------------------------
Create procedure usp_AtualizarColaborador
	(IdColaborador int
	)
language sql
as $$

	delete from Colaborador
	where 
		pk_Id_Colaborador = IdColaborador;
$$;
